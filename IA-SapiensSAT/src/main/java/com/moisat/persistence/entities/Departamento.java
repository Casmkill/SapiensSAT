package com.moisat.persistence.entities;
// Generated Sep 1, 2018 11:44:50 AM by Hibernate Tools 5.2.3.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Departamento generated by hbm2java
 */
@Entity
@Table(name = "DEPARTAMENTO", schema = "SATFING", uniqueConstraints = @UniqueConstraint(columnNames = "DIRECTOR"))
public class Departamento implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private String idDepartamento;
	private Facultad facultad;
	private Persona persona;
	private String nombreDepartamento;
	private Set<Carrera> carreras = new HashSet<Carrera>(0);
	private Set<Consejero> consejeros = new HashSet<Consejero>(0);
	private Set<Asignatura> asignaturas = new HashSet<Asignatura>(0);
	private Set<Profesor> profesors = new HashSet<Profesor>(0);

	public Departamento() {
	}

	public Departamento(String idDepartamento, Facultad facultad, Persona persona, String nombreDepartamento) {
		this.idDepartamento = idDepartamento;
		this.facultad = facultad;
		this.persona = persona;
		this.nombreDepartamento = nombreDepartamento;
	}

	public Departamento(String idDepartamento, Facultad facultad, Persona persona, String nombreDepartamento,
			Set<Carrera> carreras, Set<Consejero> consejeros, Set<Asignatura> asignaturas, Set<Profesor> profesors) {
		this.idDepartamento = idDepartamento;
		this.facultad = facultad;
		this.persona = persona;
		this.nombreDepartamento = nombreDepartamento;
		this.carreras = carreras;
		this.consejeros = consejeros;
		this.asignaturas = asignaturas;
		this.profesors = profesors;
	}

	@Id

	@Column(name = "ID_DEPARTAMENTO", unique = true, nullable = false, length = 510)
	public String getIdDepartamento() {
		return this.idDepartamento;
	}

	public void setIdDepartamento(String idDepartamento) {
		this.idDepartamento = idDepartamento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_FACULTAD", nullable = false)
	public Facultad getFacultad() {
		return this.facultad;
	}

	public void setFacultad(Facultad facultad) {
		this.facultad = facultad;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DIRECTOR", unique = true, nullable = false)
	public Persona getPersona() {
		return this.persona;
	}

	public void setPersona(Persona persona) {
		this.persona = persona;
	}

	@Column(name = "NOMBRE_DEPARTAMENTO", nullable = false, length = 510)
	public String getNombreDepartamento() {
		return this.nombreDepartamento;
	}

	public void setNombreDepartamento(String nombreDepartamento) {
		this.nombreDepartamento = nombreDepartamento;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "departamento")
	public Set<Carrera> getCarreras() {
		return this.carreras;
	}

	public void setCarreras(Set<Carrera> carreras) {
		this.carreras = carreras;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "departamento")
	public Set<Consejero> getConsejeros() {
		return this.consejeros;
	}

	public void setConsejeros(Set<Consejero> consejeros) {
		this.consejeros = consejeros;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "departamento")
	public Set<Asignatura> getAsignaturas() {
		return this.asignaturas;
	}

	public void setAsignaturas(Set<Asignatura> asignaturas) {
		this.asignaturas = asignaturas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "departamento")
	public Set<Profesor> getProfesors() {
		return this.profesors;
	}

	public void setProfesors(Set<Profesor> profesors) {
		this.profesors = profesors;
	}

}
